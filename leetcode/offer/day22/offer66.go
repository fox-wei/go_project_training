package day22

//*数组A[0,1,2...,n-1]；
//*数组B[i]是A中除A[i]之外的所有元素的乘积；（不能使用除法）
//^思路B[i] = A[0]*A[1]*...*A[i-1]*1*A[i+1]*...*A[n-1]
//*做出表格：
/*
B[0] = 1 A[1] A[2] A[3] ... A[n-1]
B[1] = [0] 1 A[2] A[3] ... A[n-1]
B[2] = [0] A[1] 1 A[3] ... A[n-1]
B[n-1] = [0] A[1] 1 A[3] ...A[n-2]  1
*/
//*表格B可以分为两个部分：上三角和下三角
//*计算下三角：从上到下：B[i] = B[i-1]*A[i-1](i>0)
//*计算上三角： 从下到上：tmp *= A[i+1] (i<n); B[i] *= tmp (i<n-2)
func constructArr(a []int) []int {
	b := make([]int, len(a))
	b[0] = 1
	//*计算下三角
	for i := 1; i < len(b); i++ {
		b[i] = b[i-1] * a[i-1]
	}

	tmp := 1
	//?计算上三角
	for i := len(b) - 2; i >= 0; i-- {
		tmp *= a[i+1]
		b[i] *= tmp
	}
	return b
}
